#version 450
#extension GL_ARB_separate_shader_objects : enable

#define WORKGROUP_SIZE 8
layout ( local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE, local_size_z = WORKGROUP_SIZE ) in;

#define WORLD_SIZE 128
layout ( binding = 0 ) readonly buffer InWorldDataBlock
{
    vec4 mWorldData[ WORLD_SIZE * WORLD_SIZE * WORLD_SIZE ];
} inWorldData;

layout ( binding = 1 ) buffer OutParticleBlock
{
    vec4 mParticleData[ WORLD_SIZE * WORLD_SIZE * WORLD_SIZE ];
} particleBuffer;

layout(push_constant) uniform PushConstantsBlock
{
    float mTime;
} PushConstants;

float random(vec3 st) {
    return fract(sin(dot(st.xyz,
    vec3(12.9898,78.233,39.847)))*
    43758.5453123 + PushConstants.mTime );
}

void main()
{
    uint x = gl_GlobalInvocationID.x;
    uint y = gl_GlobalInvocationID.y;
    uint z = gl_GlobalInvocationID.z;

    // If we're out of bounds, just return
    if( x >= WORLD_SIZE || y >= WORLD_SIZE || z >= WORLD_SIZE )
    {
        return;
    }
}
